require('dotenv').config()
import nodemailer from "nodemailer"

let sendSimpleEmail = async (dataSend) => {

    // create reusable transporter object using the default SMTP transport
    let transporter = nodemailer.createTransport({
        host: "smtp.gmail.com",
        port: 587,
        secure: false, // true for 465, false for other ports
        auth: {
        user: process.env.EMAIL_APP, // generated ethereal user
        pass: process.env.EMAIL_APP_PASSWORD, // generated ethereal password
        },
    });

    // send mail with defined transport object
    let info = await transporter.sendMail({
        from: '"HBT 👻" <baotoandd2016@gmail.com>', // sender address
        to: dataSend.receiverEmail, // list of receivers
        subject: "Thông tin đặt lịch khám bệnh ✔", // Subject line
        html: getBodyHTML(dataSend)
        , 
  });
}

let sendSimpleEmailPassowrd = async (dataSend) => {

    // create reusable transporter object using the default SMTP transport
    let transporter = nodemailer.createTransport({
        host: "smtp.gmail.com",
        port: 587,
        secure: false, // true for 465, false for other ports
        auth: {
        user: process.env.EMAIL_APP, // generated ethereal user
        pass: process.env.EMAIL_APP_PASSWORD, // generated ethereal password
        },
    });

    // send mail with defined transport object
    let info = await transporter.sendMail({
        from: '"HBT 👻" <baotoandd2016@gmail.com>', // sender address
        to: dataSend.receiverEmail, // list of receivers
        subject: "Thông tin về mật khẩu ✔", // Subject line
        html: getBodyHTMLSendPassword(dataSend)
        , 
  });
}

let sendAttachment = async (dataSend) => {
    // create reusable transporter object using the default SMTP transport
    let transporter = nodemailer.createTransport({
        host: "smtp.gmail.com",
        port: 587,
        secure: false, // true for 465, false for other ports
        auth: {
        user: process.env.EMAIL_APP, // generated ethereal user
        pass: process.env.EMAIL_APP_PASSWORD, // generated ethereal password
        },
    });

    // send mail with defined transport object
    let info = await transporter.sendMail({
        from: '"HBT 👻" <baotoandd2016@gmail.com>', // sender address
        to: dataSend.email, // list of receivers
        subject: "Thông tin đặt lịch khám bệnh ✔", // Subject line
        html: getBodyHTMLRemedy(dataSend),
        attachments: [
            {
                filename: `Đơn thuốc ${dataSend.patientName}-${new Date().getTime()}.png`,
                content: dataSend.imgBase64.split("base64,")[1],
                encoding: "base64"
            }

        ],
        
    });
}



let sendForgotpassword = async (dataSend) => {

    // create reusable transporter object using the default SMTP transport
    let transporter = nodemailer.createTransport({
        host: "smtp.gmail.com",
        port: 587,
        secure: false, // true for 465, false for other ports
        auth: {
        user: process.env.EMAIL_APP, // generated ethereal user
        pass: process.env.EMAIL_APP_PASSWORD, // generated ethereal password
        },
    });

    // send mail with defined transport object
    let info = await transporter.sendMail({
        from: '"Medical HCMUTE 👻" <medicalhcmute@gmail.com>', // sender address
        to: dataSend.email, // list of receivers
        subject: "Medical HCMUTE Password Reset Request", // Subject line
        html: getBodyForPassword(dataSend), // HTML body generated by the `getBodyForPassword` function
    });
    
}
let getBodyHTMLRemedy = (dataSend) => {
    let result = ''
    if (dataSend.language === 'en')
    {
        result = `
        <h3>Dear, ${dataSend.patientName}!</h3>
        <p>You received this email because you have scheduled a medical appointment on the Medical HCMUTE system.</p>
       
        <div>Sincerely thank you.</div>
         `
    }
    else{
        result = `
        <h3>Xin chào ${dataSend.patientName}!</h3>
        <p>Bạn nhận được Email này vì bạn đã đặt lịch khám bệnh trên hệ thống Medical HCMUTE thành công</p>
        <p>Thông tin đơn thuốc và hóa đơn được gửi trong file đính kèm:</p>
     
        <div>Xin chân thành cảm ơn</div>
         `
    }

    return result
}
let getBodyHTML = (dataSend) => 
{
    let result = ''
    if (dataSend.language === 'en')
    {
        result = `
        <h3>Dear, ${dataSend.patientName}!</h3>
        <p>You received this email because you have scheduled a medical appointment on the Medical HCMUTE system.</p>
        <p>Medical appointment booking information:</p>
        <div><b>Time: ${dataSend.time}</b></div>
        <div><b>Doctor: ${dataSend.doctorName}</b></div>

        <p>If the information is correct, please click on the link below to confirm.</p>
        <div><a href=${dataSend.redirectLink} target="_blank">Click here</a></div>

        <div>Sincerely thank you.</div>
         `
    }
    else{
        result = `
        <h3>Xin chào ${dataSend.patientName}!</h3>
        <p>Bạn nhận được Email này vì bạn đã đặt lịch khám bệnh trên hệ thống Medical HCMUTE</p>
        <p>Thông tin đặt lịch khám bệnh:</p>
        <div><b>Thời gian: ${dataSend.time}</b></div>
        <div><b>Bác sĩ: ${dataSend.doctorName}</b></div>

        <p>Nếu các thông tin là đúng sự thật vui lòng Click vào đường Link bên dưới xác nhận</p>
        <div><a href=${dataSend.redirectLink} target="_blank">Click here</a></div>

        <div>Xin chân thành cảm ơn</div>
         `
    }

    return result
}


let getBodyForPassword = (dataSend) => {
    let result = '';
    if (dataSend.language === 'en') {
        result = `
        <h3>Dear, ${dataSend.recipientName}!</h3>
        <p>You received this email because you requested to reset your password on the Medical HCMUTE system.</p>
        <p>Your verification code is:</p>
        <div><h2>${dataSend.verificationCode}</h2></div>
        <p>Please enter this code on the reset password page to verify your identity.</p>
        <div>Sincerely thank you.</div>
        `;
    } else {
        result = `
        <h3>Xin chào ${dataSend.recipientName}!</h3>
        <p>Bạn nhận được Email này vì bạn yêu cầu đặt lại mật khẩu trên hệ thống Medical HCMUTE.</p>
        <p>Mã xác thực của bạn là:</p>
        <div><h2>${dataSend.verificationCode}</h2></div>
        <p>Vui lòng nhập mã này trên trang đặt lại mật khẩu để xác minh danh tính của bạn.</p>
        <div>Xin chân thành cảm ơn.</div>
        `;
    }
    return result;
}

let getBodyHTMLSendPassword = (dataSend) => 
{
    let result = ''
    if (dataSend.language === 'en')
    {
        result = `
        <h3>Dear!</h3>
        <p>You have confirmed your medical appointment on the Medical HCMUTE system. Thank you for your confirmation.</p>
        <p>Because we checked but did not see you perform the login. This is your password <b>${dataSend.password}</b></p>
        <p>You can use the above password to log in, to use our many useful functions</p>
    
        <div>Sincerely thank you.</div>
         `
    }
    else{
        result = `
        <h3>Xin chào bạn!</h3>
        <p>Bạn đã xác nhận lịch hẹn khám bệnh trên hệ thống Medical HCMUTE. Cảm ơn bạn đã xác nhận lịch hẹn.</p>
        <p>Do chúng tôi kiểm tra chưa thấy bạn thực hiện đăng nhập. Đây là mật khẩu của bạn <b>${dataSend.password}</b></p>
        <p>Bạn có thể sử dụng mật khẩu trên để đăng nhập, để sử dụng nhiều chức năng bổ ích của chúng tôi</p>
        <div>Xin chân thành cảm ơn</div>
         `
    }

    return result
}

module.exports = {
    sendSimpleEmail: sendSimpleEmail,
    sendAttachment: sendAttachment,
    sendForgotpassword: sendForgotpassword,
    sendSimpleEmailPassowrd:sendSimpleEmailPassowrd
}


